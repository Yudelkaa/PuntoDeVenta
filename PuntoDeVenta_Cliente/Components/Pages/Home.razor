@page "/"
@rendermode InteractiveServer
@using Shared.Models;
<PageTitle>Principal</PageTitle>

<div class="container-fluid">

	<div class="row mt-4">

		<div class="d-flex justify-content-end mt-2 align-items-end">@date</div>
		<div class="col-md-7">
			<fieldset class="border-success border border-2 mt-4" style="padding: 15px">
				<div class="col-md-12 mt-2">
					<div class="input-group mb-4">
						<input type="text" class="form-control" placeholder="Buscar Producto" @bind="searchText" />
						<button class="btn btn-success bi bi-search" @onclick="BuscarProducto"></button>
					</div>
					<div class="table-responsive" style="height: 300px; overflow-y: auto;">
						<table class="table table-bordered">
							<thead>
								<tr>
									<th>Producto</th>
									<th>Precio</th>
									<th>Stock</th>
									<th>Cancelar</th>
									<th>Agregar</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var product in FilteredProducts)
								{
									<tr>
										<td>@product.Name</td>
										<td>$@product.Price</td>
										<td>@product.Stock</td>
										<td>
											<button class="btn btn-outline-danger btn-sm" @onclick="() => EliminateCarrito(product)">
												<i class="bi bi-dash-circle"></i>
											</button>
										</td>
										<td>
											<button class="btn btn-outline-success btn-sm" @onclick="() => AddCarrito(product)">
												<i class="bi bi-plus-circle"></i>
											</button>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</fieldset>
		</div>
		<div class="col-md-5">
			<fieldset class="border-success border border-2 mt-2" style="padding: 12px">
				<legend class="float-none w-auto px-3">Detalles de la Venta</legend>
				<table class="table table-bordered table-responsive">
					<thead>
						<tr>
							<th>Producto</th>
							<th>Cantidad</th>
							<th>Precio</th>
							<th>Descuento</th>
							<th>SubTotal</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in cart)
						{
							<tr>
								<td>@item.Product.Name</td>
								<td>@item.Quantity</td>
								<td>$@item.Product.Price</td>
								<td>
									@{
										var descuento = item.Quantity * item.Product.Price * item.Product.Discount;
										var porcentajeDescuento = item.Product.Discount * 100;
										var descuentoFormateado = porcentajeDescuento.ToString("0.0");
									}
									@descuentoFormateado%
								</td>
								<td>$@(item.Quantity * item.Product.Price - descuento)</td>
							</tr>
						}
					</tbody>
				</table>
				<div class="d-flex justify-content-end mt-3 flex-column">
					<div class="text-end">
						<span class="fw-bold">SubTotal:</span> $@SubTotal().ToString("0.00")
					</div>
					<div class="text-end">
						<span class="fw-bold">ITBIS:</span> $@ITBIS().ToString("0.00")
					</div>
					<div class="text-end">
						<span class="fw-bold">Total:</span> $@Total().ToString("0.00")
					</div>
				</div>
				<div class="d-flex justify-content-between mt-3">
					<button class="btn btn-danger bi bi-trash" @onclick="() => CancelarCompra()"> Cancelar</button>
					<button class="btn btn-success bi bi-cart-plus" @onclick="shop"> Finalizar</button>
				</div>
			</fieldset>
		</div>

	</div>
</div>
@if (end)
{
	<div class="modal-backdrop show" style="background-color: rgba(0, 0, 0, 0.5);"></div>
	<div class="modal d-block autoridad">
		<div class="position-fixed top-50 start-50 translate-middle" style="width: 40rem; z-index: 2000;">
			<div class="modal-content" style="border-radius: 25px; background-color: rgba(248, 249, 250, 12); height: 60vh;">
				<div class="modal-header" style="background-color: #34495e; color: white;">
					<h5 class="modal-title fw-bold d-flex align-items-center">
						<img src="/img/puesto.png" alt="Icono de puesto" style="width: 20px; height: 20px; margin-right: 5px;">
						Finalizar compra
					</h5>
					<div class="justify-content-end d-flex">
						<button type="button" class="btn btn-light bi bi-printer"></button>
						<button type="button" class="btn btn-danger text-white" @onclick="modalOut">
							<i class="bi bi-x"></i>
						</button>
					</div>
				</div>
				<div class="modal-body d-flex flex-column align-items-center">
					<div class="text-center mb-3">
						<p>Método de pago:</p>
						<select class="form-select mb-3">
							<option value="1">Tarjeta de crédito</option>
							<option value="2">Transferencia bancaria</option>
							<option value="3">Efectivo</option>
						</select>
					</div>
					<div class="d-flex justify-content-center">
						<button class="btn btn-danger me-2" @onclick="modalOut">Cancelar</button>
						<button class="btn btn-success">Confirmar</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}




@code {
	private string searchText = "";
	private string? date;
	private bool end { get; set; } = false;
	public bool factura { get; set; } = false;
	public Ventas ventas { get; set; } = new Ventas();
	private List<Product> products = new List<Product>
	{
		new Product { ProductId = 1, Name = "Producto 1", Price = 10.00m, Stock = 50, Category = "General", Discount= 0.50m },
		new Product { ProductId = 2, Name = "Producto 2", Price = 20.00m, Stock = 30, Category = "Frutas", Discount= 0.20m },
		new Product { ProductId = 3, Name = "Producto 3", Price = 30.00m, Stock = 20, Category = "Sandwiches", Discount= 0.75m },
		new Product { ProductId = 4, Name = "Producto 4", Price = 40.00m, Stock = 10, Category = "Dulces", Discount= 0m },
		new Product { ProductId = 5, Name = "Producto 5", Price = 55.00m, Stock = 5, Category = "Vegetales", Discount= 0.12m },
		new Product { ProductId = 6, Name = "Producto 6", Price = 35.00m, Stock = 55, Category = "esomimo", Discount= 0.14m },
		new Product { ProductId = 7, Name = "Producto 7", Price = 45.00m, Stock = 22, Category = "aja", Discount= 0.15m },
		new Product { ProductId = 8, Name = "Producto 8", Price = 55.00m, Stock = 11, Category = "blahblah", Discount= 0.17m }
	};


	private List<CartItem> cart = new List<CartItem>();


	public void CerrarModal()
	{
		factura = false;
		end = false;
	}

	public async Task Eliminar(int id)
	{
		end = true;
	}
	private void shop()
	{
		end = true;
	}

	private void modalOut()
	{
		end = false;
	}

	private void modalUp()
	{
		end = true;
	}


	private void AddCarrito(Product product)
	{
		var cartItem = cart.FirstOrDefault(c => c.Product.ProductId == product.ProductId);
		if (cartItem != null)
		{
			cartItem.Quantity++;
		}
		else
		{
			cart.Add(new CartItem { Product = product, Quantity = 1 });
		}
	}

	private void UpdateCurrentDateTime()
	{
		date = DateTime.Now.ToString("g");
	}

	protected override void OnInitialized()
	{
		date = DateTime.Now.ToString("g");
	}
	private void EliminateCarrito(Product product)
	{
		var cartItem = cart.FirstOrDefault(c => c.Product.ProductId == product.ProductId);
		if (cartItem != null && cartItem.Quantity > 0)
		{
			cartItem.Quantity--;
			if (cartItem.Quantity == 0)
			{
				cart.Remove(cartItem);
			}
		}
	}

	private decimal Total()
	{
		decimal total = 0m;
		foreach (var item in cart)
		{
			var descuento = item.Quantity * item.Product.Price * item.Product.Discount;
			total += (item.Quantity * item.Product.Price - descuento);
		}
		return total;
	}

	private decimal SubTotal()
	{
		return cart.Sum(c => c.Quantity * c.Product.Price);
	}

	private decimal ITBIS()
	{
		decimal itbisTotal = 0m;
		foreach (var item in cart)
		{
			decimal itbisItem = item.Quantity * item.Product.Price * 0.18m;
			itbisTotal += itbisItem;
		}
		return itbisTotal;
	}

	private IEnumerable<Product> FilteredProducts => products
		.Where(p => string.IsNullOrEmpty(searchText) || p.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase));

	private void BuscarProducto()
	{
		
	}

	public void CancelarCompra()
	{
		cart.Clear();
	}

	public class Product
	{
		public int ProductId { get; set; }
		public string? Name { get; set; }
		public decimal Price { get; set; }
		public int Stock { get; set; }
		public string? Category { get; set; }
		public decimal Discount { get; set; }
	}

	public class CartItem
	{
		public Product? Product { get; set; }
		public int Quantity { get; set; }
		public decimal SubTotal { get; set; }

	}
}
